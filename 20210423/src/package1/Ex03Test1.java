package package1;

public class Ex03Test1 {
    // 상속을 하게 되면 자식 클래스로 만든 자식 객체는 부모 객체와 자식 객체 두개가 존재한다. 
	public static void main(String[] args) {
		// 클래스 변수와 객체의 자료형이 다를 수 있는 경우는 객체의 자료형이 상속을 받은 경우에만 가능
		Ex02 ex = new Ex03(); // 부모 클래스 = 자식 클래스 : 자동 형변환
		/// 자식 객체를 부모 변수에 대입  
		// 부모 변수는 자식 객체를 가지고 있게 된다.
		ex.field1 = "부모 필드";
		System.out.println(ex.field1);
		ex.method1(); // 
		ex.method2(); //
		/// 부모 변수가 자식 객체를 가지고 있다고 하더래도 
		// ex.field2 = "자식 필드"; // 자식 클래스에 있는 필드
		///ex.method3(); // 자식 클래스에 있는 메서드
		// 부모 클래스인 변수는 자식클래스로 만들어진 자식 객체에서 부모객체만 참조 할 수 있고 
		// 자식 객체는 참조 할 수 없다.
		/// 부모 변수인 경우 자식 객체를 참조 할 수 없다.
		/// 자식 객체에 있는 부모객체와 자식 객체 모두를 다시 참조 하고 싶다.
		Ex03 ex1 = (Ex03)ex;   // 자식 클래스 = (자식 클래스)부모 클래스 
		// 강제 형변환
		ex1.field2 = "이숭무";   
		System.out.println(ex1.field2);
		ex1.method3();
		// 자동 형변환을 하면 부모 클래스 변수는 자식 객체는 참조 하지 못한다.
		// 이때 자식 객체를 참조 하기 위해서 강제 형변환을 하게 된다.
		
		//  자동 형변환을 한 경우 강제 형변환을 할 수 있다.
	}
}
